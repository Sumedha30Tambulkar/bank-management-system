package com.example.main.security;

import java.util.Date;

import org.springframework.stereotype.Component;

import com.auth0.jwt.JWT;
import com.auth0.jwt.algorithms.Algorithm;
import com.auth0.jwt.interfaces.DecodedJWT;
import com.example.main.entity.Role;

@Component
public class JwtUtil {

    private final String SECRET = "e?tZm)Y[zuD8ECWgd`&a]!_R.h";
    private final long EXPIRATION_TIME = 86400000; // 1 day

    public String generateToken(String email, Role role) {
        return JWT.create()
                .withSubject(email)
                .withClaim("role", role.name()) // <-- important
                .withExpiresAt(new Date(System.currentTimeMillis() + EXPIRATION_TIME))
                .sign(Algorithm.HMAC256(SECRET));
    }

    public String getEmailFromToken(String token) {
        return JWT.require(Algorithm.HMAC256(SECRET))
                .build()
                .verify(token)
                .getSubject();
    }

    public String getRoleFromToken(String token) {
        DecodedJWT jwt = JWT.require(Algorithm.HMAC256(SECRET)).build().verify(token);
        return jwt.getClaim("role").asString();
    }

    public boolean validateToken(String token) {
        try {
            JWT.require(Algorithm.HMAC256(SECRET)).build().verify(token);
            return true;
        } catch (Exception e) {
            return false;
        }
    }
}
